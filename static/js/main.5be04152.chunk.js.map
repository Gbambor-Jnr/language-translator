{"version":3,"sources":["Components/From.js","Components/To.js","App.js","index.js"],"names":["From","props","htmlFor","style","color","from","id","onChange","onChangeNow","languages","map","language","value","code","name","To","to","App","useState","data","setData","input","setInput","outPut","setOutput","setFrom","setTo","useEffect","getLanguages","a","fetch","res","ok","Error","json","console","log","message","className","e","target","rows","cols","readOnly","onClick","params","URLSearchParams","append","axios","post","headers","accept","then","translatedText","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAjBF,SAACC,GACZ,OACE,gCACE,wBAAOC,QAAQ,OAAOC,MAAO,CAAEC,MAAO,OAAtC,kBACQH,EAAMI,KADd,OAGA,wBAAQC,GAAG,OAAOC,SAAUN,EAAMO,YAAaL,MAAO,CAAEC,MAAO,OAA/D,SACGH,EAAMQ,UAAUC,KAAI,SAACC,GAAD,OACnB,wBAA4BC,MAAOD,EAASE,KAA5C,SACGF,EAASG,MADCH,EAASE,eCWjBE,EAnBJ,SAACd,GACV,OACE,gCACE,wBAAOC,QAAQ,KAAKC,MAAO,CAAEC,MAAO,OAApC,gBACMH,EAAMe,GADZ,OAGA,wBAAQV,GAAG,KAAKC,SAAUN,EAAMO,YAAaL,MAAO,CAAEC,MAAO,OAA7D,SACGH,EAAMQ,UAAUC,KAAI,SAACC,GAAD,OACnB,wBAA4BC,MAAOD,EAASE,KAA5C,SACGF,EAASG,MADCH,EAASE,e,wBCuEjBI,MA1Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,MAAjC,mBAAOb,EAAP,KAAaoB,EAAb,KACA,EAAoBP,mBAAS,MAA7B,mBAAOF,EAAP,KAAWU,EAAX,KA8CA,OAxCAC,qBAAU,WACR,IAAMC,EAAY,uCAAG,8BAAAC,EAAA,+EAECC,MAAM,wCAFP,WAEXC,EAFW,QAGRC,GAHQ,sBAIT,IAAIC,MAAM,qBAJD,uBAMEF,EAAIG,OANN,OAMXf,EANW,OAOjBgB,QAAQC,IAAIjB,GACZC,EAAQD,GARS,kDAUjBgB,QAAQC,IAAI,KAAIC,SAVC,0DAAH,qDAalBT,MACC,IA0BD,sBAAKU,UAAU,eAAf,UAEE,oBAAInC,MAAO,CAAEC,MAAO,SAApB,oDACA,qBAAKkC,UAAU,YAAf,SACE,cAAC,EAAD,CAAM7B,UAAWU,EAAMX,YAjDP,SAAC+B,GACrBd,EAAQc,EAAEC,OAAO5B,QAgDsCP,KAAMA,MAE3D,0BACEoC,KAAM,EACNC,KAAM,GACNnC,SAdqB,SAACgC,GAC1BjB,EAASiB,EAAEC,OAAO5B,QAcdA,MAAOS,IAET,cAAC,EAAD,CAAIZ,UAAWU,EAAMH,GAAIA,EAAIR,YAtDT,SAAC+B,GAAD,OAAOb,EAAMa,EAAEC,OAAO5B,UAuD1C,0BAAU6B,KAAM,EAAGC,KAAM,GAAI9B,MAAOW,EAAQoB,UAAQ,IACpD,wBAAQL,UAAU,MAAMM,QAtCD,WACzB,IAAMC,EAAS,IAAIC,gBACnBD,EAAOE,OAAO,IAAK1B,GACnBwB,EAAOE,OAAO,SAAU1C,GACxBwC,EAAOE,OAAO,SAAU/B,GAGxBgC,IACGC,KADH,sCAC+CJ,EAAQ,CACnDK,QAAS,CACPC,OAAQ,mBACR,eAAgB,uCAGnBC,MAAK,SAACrB,GACLP,EAAUO,EAAIZ,KAAKkC,oBAuBrB,2BClENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5be04152.chunk.js","sourcesContent":["const From = (props) => {\n  return (\n    <div>\n      <label htmlFor=\"from\" style={{ color: \"red\" }}>\n        From({props.from})\n      </label>\n      <select id=\"from\" onChange={props.onChangeNow} style={{ color: \"red\" }}>\n        {props.languages.map((language) => (\n          <option key={language.code} value={language.code}>\n            {language.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default From;\n","const To = (props) => {\n  return (\n    <div>\n      <label htmlFor=\"to\" style={{ color: \"red\" }}>\n        To({props.to})\n      </label>\n      <select id=\"to\" onChange={props.onChangeNow} style={{ color: \"red\" }}>\n        {props.languages.map((language) => (\n          <option key={language.code} value={language.code}>\n            {language.name}\n          </option>\n        ))}\n      </select>\n\n      {/* <textarea rows={80} cols={50} /> */}\n    </div>\n  );\n};\n\nexport default To;\n","import From from \"./Components/From\";\nimport To from \"./Components/To\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [outPut, setOutput] = useState(\"\");\n  const [from, setFrom] = useState(\"en\");\n  const [to, setTo] = useState(\"en\");\n\n  const changeHandler = (e) => {\n    setFrom(e.target.value);\n  };\n  const toChangeHandler = (e) => setTo(e.target.value);\n  useEffect(() => {\n    const getLanguages = async () => {\n      try {\n        const res = await fetch(\"https://libretranslate.com/languages\");\n        if (!res.ok) {\n          throw new Error(\"error in response\");\n        }\n        const data = await res.json();\n        console.log(data);\n        setData(data);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    getLanguages();\n  }, []);\n\n  const buttonClickHandler = () => {\n    const params = new URLSearchParams();\n    params.append(\"q\", input);\n    params.append(\"source\", from);\n    params.append(\"target\", to);\n    // params.append(\"api-key\", \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n\n    axios\n      .post(`https://libretranslate.de/translate`, params, {\n        headers: {\n          accept: \"application/json\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n      })\n      .then((res) => {\n        setOutput(res.data.translatedText);\n      });\n  };\n\n  const inputChangeHandler = (e) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <div className=\"divContainer\">\n      {/* <div className=\"divCont\"> */}\n      <h1 style={{ color: \"white\" }}>Translate To Your Favourite Languages </h1>\n      <div className=\"divToFrom\">\n        <From languages={data} onChangeNow={changeHandler} from={from} />\n      </div>\n      <textarea\n        rows={9}\n        cols={50}\n        onChange={inputChangeHandler}\n        value={input}\n      />\n      <To languages={data} to={to} onChangeNow={toChangeHandler} />\n      <textarea rows={9} cols={50} value={outPut} readOnly />\n      <button className=\"btn\" onClick={buttonClickHandler}>\n        Translate\n      </button>\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}